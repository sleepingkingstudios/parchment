// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SpellForm /> fields <CancelButton /> should match the snapshot 1`] = `
<CancelButton
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
  isUpdate={false}
>
  <FormGroup
    className=""
    colWidth={null}
  >
    <div
      className="form-group col"
    >
      <SpellFormCancelButton
        form={
          Object {
            "data": Object {
              "spell": Object {
                "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                "duration": "Instantaneous",
                "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                "level": 0,
                "materialComponent": "",
                "name": "Thunderclap",
                "range": "Self",
                "ritual": false,
                "school": "illusion",
                "shortDescription": "Create an ominous thunderclap when your name is spoken",
                "slug": "thunderclap",
                "somaticComponent": false,
                "verbalComponent": false,
              },
            },
            "onChangeAction": [MockFunction],
            "onSubmitAction": [MockFunction],
            "path": Array [
              "spell",
            ],
          }
        }
        isUpdate={false}
      >
        <LinkButton
          block={true}
          buttonSize={null}
          buttonStyle="secondary"
          className={null}
          link={false}
          outline={true}
          url="/spells"
        >
          <Link
            className="btn btn-outline-secondary btn-block"
            to="/spells"
          >
            <a
              className="btn btn-outline-secondary btn-block"
              href="/spells"
              onClick={[Function]}
            >
              Cancel
            </a>
          </Link>
        </LinkButton>
      </SpellFormCancelButton>
    </div>
  </FormGroup>
</CancelButton>
`;

exports[`<SpellForm /> fields <CastingTimeField /> should match the snapshot 1`] = `
<CastingTimeField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="castingTime"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-casting-time-input"
        >
          Casting Time
        </label>
        <CastingTimeInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormInput
            className={null}
            id="spell-casting-time-input"
            onChange={[Function]}
            placeholder=""
            type="text"
            validStatus={null}
            value="1 reaction, which you take when you speak your own name or hear it spoken"
          >
            <input
              className="form-control"
              id="spell-casting-time-input"
              onChange={[Function]}
              placeholder=""
              type="text"
              value="1 reaction, which you take when you speak your own name or hear it spoken"
            />
          </FormInput>
        </CastingTimeInput>
      </div>
    </FormGroup>
  </FormField>
</CastingTimeField>
`;

exports[`<SpellForm /> fields <DescriptionField /> should match the snapshot 1`] = `
<DescriptionField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="description"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-description-input"
        >
          Description
        </label>
        <DescriptionInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormTextAreaInput
            className={null}
            id="spell-description-input"
            onChange={[Function]}
            rows={3}
            validStatus={null}
            value="Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap."
          >
            <textarea
              className="form-control"
              id="spell-description-input"
              onChange={[Function]}
              rows={3}
              value="Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap."
            />
          </FormTextAreaInput>
        </DescriptionInput>
      </div>
    </FormGroup>
  </FormField>
</DescriptionField>
`;

exports[`<SpellForm /> fields <DurationField /> should match the snapshot 1`] = `
<DurationField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="duration"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-duration-input"
        >
          Duration
        </label>
        <DurationInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormInput
            className={null}
            id="spell-duration-input"
            onChange={[Function]}
            placeholder=""
            type="text"
            validStatus={null}
            value="Instantaneous"
          >
            <input
              className="form-control"
              id="spell-duration-input"
              onChange={[Function]}
              placeholder=""
              type="text"
              value="Instantaneous"
            />
          </FormInput>
        </DurationInput>
      </div>
    </FormGroup>
  </FormField>
</DurationField>
`;

exports[`<SpellForm /> fields <LevelField /> should match the snapshot 1`] = `
<LevelField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="level"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-level-input"
        >
          Level
        </label>
        <LevelInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormNumericInput
            id="spell-level-input"
            onChange={[Function]}
            type="number"
            value={0}
          >
            <FormInput
              className={null}
              id="spell-level-input"
              onChange={[Function]}
              placeholder=""
              type="number"
              validStatus={null}
              value="0"
            >
              <input
                className="form-control"
                id="spell-level-input"
                onChange={[Function]}
                placeholder=""
                type="number"
                value="0"
              />
            </FormInput>
          </FormNumericInput>
        </LevelInput>
      </div>
    </FormGroup>
  </FormField>
</LevelField>
`;

exports[`<SpellForm /> fields <NameField /> should match the snapshot 1`] = `
<NameField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="name"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-name-input"
        >
          Name
        </label>
        <NameInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormInput
            className={null}
            id="spell-name-input"
            onChange={[Function]}
            placeholder=""
            type="text"
            validStatus={null}
            value="Thunderclap"
          >
            <input
              className="form-control"
              id="spell-name-input"
              onChange={[Function]}
              placeholder=""
              type="text"
              value="Thunderclap"
            />
          </FormInput>
        </NameInput>
      </div>
    </FormGroup>
  </FormField>
</NameField>
`;

exports[`<SpellForm /> fields <RangeField /> should match the snapshot 1`] = `
<RangeField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="range"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-range-input"
        >
          Range
        </label>
        <RangeInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormInput
            className={null}
            id="spell-range-input"
            onChange={[Function]}
            placeholder=""
            type="text"
            validStatus={null}
            value="Self"
          >
            <input
              className="form-control"
              id="spell-range-input"
              onChange={[Function]}
              placeholder=""
              type="text"
              value="Self"
            />
          </FormInput>
        </RangeInput>
      </div>
    </FormGroup>
  </FormField>
</RangeField>
`;

exports[`<SpellForm /> fields <RitualField /> should match the snapshot 1`] = `
<RitualField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="ritual"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-ritual-input"
        >
          Ritual
        </label>
        <RitualInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormCheckboxInput
            className={null}
            id="spell-ritual-input"
            label={null}
            onChange={[Function]}
            validStatus={null}
            value={false}
          >
            <div
              className="custom-control custom-checkbox"
            >
              <input
                checked={false}
                className="custom-control-input"
                id="spell-ritual-input"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="custom-control-label"
                htmlFor="spell-ritual-input"
              />
            </div>
          </FormCheckboxInput>
        </RitualInput>
      </div>
    </FormGroup>
  </FormField>
</RitualField>
`;

exports[`<SpellForm /> fields <SchoolField /> should match the snapshot 1`] = `
<SchoolField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
  options={
    Array [
      Object {
        "label": "Abjuration",
        "value": "abjuration",
      },
      Object {
        "label": "Conjuration",
        "value": "conjuration",
      },
      Object {
        "label": "Divination",
        "value": "divination",
      },
      Object {
        "label": "Enchantment",
        "value": "enchantment",
      },
      Object {
        "label": "Evocation",
        "value": "evocation",
      },
      Object {
        "label": "Illusion",
        "value": "illusion",
      },
      Object {
        "label": "Necromancy",
        "value": "necromancy",
      },
      Object {
        "label": "Transmutation",
        "value": "transmutation",
      },
    ]
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="school"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-school-input"
        >
          School
        </label>
        <SchoolInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
          options={
            Array [
              Object {
                "label": "Abjuration",
                "value": "abjuration",
              },
              Object {
                "label": "Conjuration",
                "value": "conjuration",
              },
              Object {
                "label": "Divination",
                "value": "divination",
              },
              Object {
                "label": "Enchantment",
                "value": "enchantment",
              },
              Object {
                "label": "Evocation",
                "value": "evocation",
              },
              Object {
                "label": "Illusion",
                "value": "illusion",
              },
              Object {
                "label": "Necromancy",
                "value": "necromancy",
              },
              Object {
                "label": "Transmutation",
                "value": "transmutation",
              },
            ]
          }
        >
          <FormSelectInput
            className={null}
            defaultOption={null}
            id="spell-school-input"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Abjuration",
                  "value": "abjuration",
                },
                Object {
                  "label": "Conjuration",
                  "value": "conjuration",
                },
                Object {
                  "label": "Divination",
                  "value": "divination",
                },
                Object {
                  "label": "Enchantment",
                  "value": "enchantment",
                },
                Object {
                  "label": "Evocation",
                  "value": "evocation",
                },
                Object {
                  "label": "Illusion",
                  "value": "illusion",
                },
                Object {
                  "label": "Necromancy",
                  "value": "necromancy",
                },
                Object {
                  "label": "Transmutation",
                  "value": "transmutation",
                },
              ]
            }
            validStatus={null}
            value="illusion"
          >
            <select
              className="custom-select"
              id="spell-school-input"
              onChange={[Function]}
              value="illusion"
            >
              <FormSelectOption
                key="option-0"
                label="Abjuration"
                value="abjuration"
              >
                <option
                  value="abjuration"
                >
                  Abjuration
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-1"
                label="Conjuration"
                value="conjuration"
              >
                <option
                  value="conjuration"
                >
                  Conjuration
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-2"
                label="Divination"
                value="divination"
              >
                <option
                  value="divination"
                >
                  Divination
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-3"
                label="Enchantment"
                value="enchantment"
              >
                <option
                  value="enchantment"
                >
                  Enchantment
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-4"
                label="Evocation"
                value="evocation"
              >
                <option
                  value="evocation"
                >
                  Evocation
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-5"
                label="Illusion"
                value="illusion"
              >
                <option
                  value="illusion"
                >
                  Illusion
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-6"
                label="Necromancy"
                value="necromancy"
              >
                <option
                  value="necromancy"
                >
                  Necromancy
                </option>
              </FormSelectOption>
              <FormSelectOption
                key="option-7"
                label="Transmutation"
                value="transmutation"
              >
                <option
                  value="transmutation"
                >
                  Transmutation
                </option>
              </FormSelectOption>
            </select>
          </FormSelectInput>
        </SchoolInput>
      </div>
    </FormGroup>
  </FormField>
</SchoolField>
`;

exports[`<SpellForm /> fields <ShortDescriptionField /> should match the snapshot 1`] = `
<ShortDescriptionField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="shortDescription"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-short-description-input"
        >
          Short Description
        </label>
        <ShortDescriptionInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormInput
            className={null}
            id="spell-short-description-input"
            onChange={[Function]}
            placeholder=""
            type="text"
            validStatus={null}
            value="Create an ominous thunderclap when your name is spoken"
          >
            <input
              className="form-control"
              id="spell-short-description-input"
              onChange={[Function]}
              placeholder=""
              type="text"
              value="Create an ominous thunderclap when your name is spoken"
            />
          </FormInput>
        </ShortDescriptionInput>
      </div>
    </FormGroup>
  </FormField>
</ShortDescriptionField>
`;

exports[`<SpellForm /> fields <SlugField /> should match the snapshot 1`] = `
<SlugField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="slug"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-slug-input"
        >
          Slug
        </label>
        <SlugInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <FormInput
            className={null}
            id="spell-slug-input"
            onChange={[Function]}
            placeholder=""
            type="text"
            validStatus={null}
            value="thunderclap"
          >
            <input
              className="form-control"
              id="spell-slug-input"
              onChange={[Function]}
              placeholder=""
              type="text"
              value="thunderclap"
            />
          </FormInput>
        </SlugInput>
      </div>
    </FormGroup>
  </FormField>
</SlugField>
`;

exports[`<SpellForm /> fields <SourceField /> should match the snapshot 1`] = `
<SourceField
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
>
  <FormField
    colWidth={null}
    inputId={null}
    label={null}
    path={
      Array [
        "spell",
      ]
    }
    prop="source"
  >
    <FormGroup
      className="form-field"
      colWidth={null}
    >
      <div
        className="form-group col form-field"
      >
        <label
          htmlFor="spell-source-input"
        >
          Source
        </label>
        <SourceInput
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
        >
          <SelectSpellSourceInput
            id="spell-source-input"
            onChange={[Function]}
            value=""
          >
            <FormSelectInput
              className={null}
              defaultOption="Homebrew"
              id="spell-source-input"
              onChange={[Function]}
              options={Array []}
              validStatus={null}
              value=""
            >
              <select
                className="custom-select"
                id="spell-source-input"
                onChange={[Function]}
                value=""
              >
                <FormSelectOption
                  key="option-0"
                  label="Homebrew"
                  value=""
                >
                  <option
                    value=""
                  >
                    Homebrew
                  </option>
                </FormSelectOption>
              </select>
            </FormSelectInput>
          </SelectSpellSourceInput>
        </SourceInput>
      </div>
    </FormGroup>
  </FormField>
</SourceField>
`;

exports[`<SpellForm /> fields <SubmitButton /> should match the snapshot 1`] = `
<SubmitButton
  disabled={false}
  form={
    Object {
      "data": Object {
        "spell": Object {
          "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
          "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
          "duration": "Instantaneous",
          "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
          "level": 0,
          "materialComponent": "",
          "name": "Thunderclap",
          "range": "Self",
          "ritual": false,
          "school": "illusion",
          "shortDescription": "Create an ominous thunderclap when your name is spoken",
          "slug": "thunderclap",
          "somaticComponent": false,
          "verbalComponent": false,
        },
      },
      "onChangeAction": [MockFunction],
      "onSubmitAction": [MockFunction],
      "path": Array [
        "spell",
      ],
    }
  }
  status="initialized"
>
  <FormGroup
    className=""
    colWidth={null}
  >
    <div
      className="form-group col"
    >
      <SpellFormSubmitButton
        disabled={false}
        form={
          Object {
            "data": Object {
              "spell": Object {
                "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                "duration": "Instantaneous",
                "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                "level": 0,
                "materialComponent": "",
                "name": "Thunderclap",
                "range": "Self",
                "ritual": false,
                "school": "illusion",
                "shortDescription": "Create an ominous thunderclap when your name is spoken",
                "slug": "thunderclap",
                "somaticComponent": false,
                "verbalComponent": false,
              },
            },
            "onChangeAction": [MockFunction],
            "onSubmitAction": [MockFunction],
            "path": Array [
              "spell",
            ],
          }
        }
        isUpdate={false}
        status="initialized"
      >
        <FormSubmitWrapper
          block={true}
          disabled={false}
          form={
            Object {
              "data": Object {
                "spell": Object {
                  "castingTime": "1 reaction, which you take when you speak your own name or hear it spoken",
                  "description": "Immediately after speaking or hearing your name, you create the illusory sound of an ominous, distant thunderclap.",
                  "duration": "Instantaneous",
                  "id": "e17bca01-24d3-48d3-a308-099dd6dca373",
                  "level": 0,
                  "materialComponent": "",
                  "name": "Thunderclap",
                  "range": "Self",
                  "ritual": false,
                  "school": "illusion",
                  "shortDescription": "Create an ominous thunderclap when your name is spoken",
                  "slug": "thunderclap",
                  "somaticComponent": false,
                  "verbalComponent": false,
                },
              },
              "onChangeAction": [MockFunction],
              "onSubmitAction": [MockFunction],
              "path": Array [
                "spell",
              ],
            }
          }
          outline={true}
        >
          <Button
            block={true}
            buttonSize="md"
            buttonStyle="primary"
            className={null}
            disabled={false}
            link={false}
            onClick={[Function]}
            outline={true}
          >
            <button
              className="btn btn-outline-primary btn-block"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Create Spell
            </button>
          </Button>
        </FormSubmitWrapper>
      </SpellFormSubmitButton>
    </div>
  </FormGroup>
</SubmitButton>
`;
